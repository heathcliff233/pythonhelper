{"./":{"url":"./","title":"Introduction","keywords":"","body":"My Python Hand Book This file is to enable to have a quick look of the useful functions and wonderful tools that I have tried. The first part is about Python programming. The second part is about data science with scipy and requests. The third part is about machine learning. The last part is about the projects. ======= go to pages 49cddc202b04de50d92bb5069790c94e8e20a8ea By heathcliff233，使用知识共享 署名-相同方式共享 4.0协议发布            此页面修订于： 2019-06-23 16:27:54 "},"chapter1.html":{"url":"chapter1.html","title":"Chapter 1 : Python basics","keywords":"","body":"First Chapter Python basics. string in out set cycle list sys function object_oriented errors By heathcliff233，使用知识共享 署名-相同方式共享 4.0协议发布            此页面修订于： 2019-05-13 08:43:43 "},"chapter_1/string.html":{"url":"chapter_1/string.html","title":"01. string","keywords":"","body":"string 重复子串 repeat '5'*2000 #2000个5 倒序 reverse s = '12321' s == s[::-1] 读入列表 read list s = eval(input()) # eval 可输入类似‘[1,4,2,3]’ 查看保留名 reserved namespace import keyword print(keyword.kwlist) 数据地址 address a = 5 b = 5 id(a) == id(b) # 判定为True # 小整形会重复利用空间 取余 residual 28.31 % 4 # 对float型也适用 链式赋值（从右向左依次运算） a = 1 b = a = a + 1 # b = 2 ; a = 2 查找 list find str(i).find(str(x)) == -1 # 找不到 further see ai_programming/2.26 By heathcliff233，使用知识共享 署名-相同方式共享 4.0协议发布            此页面修订于： 2019-05-02 21:44:43 "},"chapter_1/in_out.html":{"url":"chapter_1/in_out.html","title":"02. in out","keywords":"","body":"IOstream 输入切割(split() func) a , b = input().split() a , b = input().split(',') 自动判定 identify automatically a = eval(input()) # input -> '1,2,3.5' # a = (1 , 2 , 3.5) 格式输出(format output) x,y = 3,5 print(x,y) # get 3 5 seperate x,y = 3,5 print(x , y , sep = ',') # get 3,5 without changing line list = [2,3,4,5,6] for i in list[:-1]: print(i,',',end = ' ') print(list[-1]) # get 2 , 3 , 4 , 5 , 6 format x,y = 3,5 print('x=%d,y=%d'%(x,y)) # get x=3,y=5 change line within arg print('x=%d,y=%d \\nhhhhhhh'%(x,y)) 保留小数(save dots) z = 2.237237 print('the result is %.2f.'%z) control white space print('the result is %10.2f.'%z) # 格式对齐，表示占多少列 # get: the result is 2.24. with many arguments to fill print('x = {0:d},z={1:.2f}'.format(x,z)) #1 表示format中位置 further see ai_programming/3.12/3.12 集合 By heathcliff233，使用知识共享 署名-相同方式共享 4.0协议发布            此页面修订于： 2019-05-02 21:35:53 "},"chapter_1/set.html":{"url":"chapter_1/set.html","title":"03. set","keywords":"","body":"set zip to combine a = [1,2,3] b = [4,5,6] print(set(zip(a,b))) # get {(2, 5), (3, 6), (1, 4)} counter realization p_dic1 = {} for item in p_list : p_dic1[item] = p_dic1.get(item,0) +1 dic.get() dict.get(key, default = None) if the key do not exist, return the second argument given further see ai_programming/3.12/集合 By heathcliff233，使用知识共享 署名-相同方式共享 4.0协议发布            此页面修订于： 2019-05-06 22:01:57 "},"chapter_1/cycle.html":{"url":"chapter_1/cycle.html","title":"04. cycle","keywords":"","body":"cycle for as iterator 作为迭代器 lst = [1,3,5,7] x = iter(lst) next(x) realization of for loop x = iter([1,2,3]) while True : try: print(next(x)) except StopIteration: break while/for else for i in range(1,10,2): if i % 5 == 0 : print('bingo') break else: print(i) further see ai_programming/3.12/循环、for循环内部 By heathcliff233，使用知识共享 署名-相同方式共享 4.0协议发布            此页面修订于： 2019-05-02 22:24:26 "},"chapter_1/list.html":{"url":"chapter_1/list.html","title":"05. list","keywords":"","body":"list list analysis a = [x*x for x in range(10)] a = [x**2 for x in range(10) if x **2 a = [(x+1,y+1) for x in range(2) for y in range(2)] lst1 = ['ass','shit','fuck'] lst2 = [2,3,4] m = [(a,b) for a in lst1 for b in lst2] delete completely lst.remove() caution lst = [1,2,4,3,5] for x in lst : if x % 2 == 0: lst.remove(x) print(lst) # get [1,4,3,5] # 问题：指针删除完元素下移，然而删除一个对象后下一个元素顶上，故出问题 lst = [1,2,4,3,5] for x in lst[:] : if x % 2 == 0: lst.remove(x) print(lst) get [1,3,5] generater (x**2 for x in range(10) if x**2 at 0x1100b8840> jieba poem = '生活可能美满，可能悲伤，生活常常让你吃屎' import jieba s = list(jieba.cut(poem)) # get cut sentence word counter import collections collections.Counter(s) counter realization further see ai_programming/3.19/3.19 By heathcliff233，使用知识共享 署名-相同方式共享 4.0协议发布            此页面修订于： 2019-05-06 22:03:39 "},"chapter_1/sys.html":{"url":"chapter_1/sys.html","title":"06. sys","keywords":"","body":"sys get storage size. import sys sys.getsizeof([]) sys.getsizeof({}) get current path import sys sys.argv By heathcliff233，使用知识共享 署名-相同方式共享 4.0协议发布            此页面修订于： 2019-05-06 22:39:15 "},"chapter_1/function.html":{"url":"chapter_1/function.html","title":"07. function","keywords":"","body":"function lambda different from list analysismap lst = [1,2,3,4,5] print(list(map(lambda x : x**2 , lst))) # get [1,4,9,16,25] def foo(x): return x**2 print(list(map(foo,lst))) # get [1,4,9,16,25] list(map(eval , ['1.2','3.4'])) # get [1.2 , 3.4] list(map(lambda x : x.upper(),['nju','pku'])) # get ['NJU','PKU'] filter print(list(filter(lambda x : x%2 == 0 , lst))) # get [2,4] reduce from functools import reduce reduce(lambda x,y : x+y , lst) # get 15 func area x = 3 def faQ(): print(x * 2) x = 5 print(x * 2) faQ() # get UnboundLocalError # local variable 'x' referenced before assignment x = 3 def faQ(): global x print(x * 2) x = 5 print(x * 2) faQ() # get 6 10 further see ai_programming/3.26/3.19补充 By heathcliff233，使用知识共享 署名-相同方式共享 4.0协议发布            此页面修订于： 2019-05-06 22:25:37 "},"chapter_1/object_oriented.html":{"url":"chapter_1/object_oriented.html","title":"08. object_oriented","keywords":"","body":"object oriented class object class Dog(object): ''' ahhhh，that's good that is good ''' def setName(self,name): self.name = name def greet(self): print('fuck%s'%self.name) if __name__ == \"__main__\" : dog = Dog() dog.setName('Jack') print(dog.name) dog.greet() 自动调用 _init_ class Dog(object): ''' ahhhh，that's good that is good ''' def __init__(self,name): self.name = name def greet(self): print('fuck%s'%self.name) if __name__ == \"__main__\" : dog = Dog('Jack') print(dog.name) dog.greet() 继承 heritage 子类 class barkingdog(Dog): def bark(self): print('barking') if __name__ == '__main__': dog = barkingdog('bili') dog.greet() 子类重写 class barkingdog(Dog): def bark(self): print('barking') def greet(self): print('that is good %s'%self.name) if __name__ == '__main__': dog = barkingdog('bili') dog.greet() super (get father class) class MyParentClass(): def __init__(self, x, y): pass class SubClass(MyParentClass): def __init__(self, x, y): super().__init__(x, y) private class P: def __init__(self,name): self.__name = name x = P('Jack') x.__name # get an error x._P__name # get 'Jack' By heathcliff233，使用知识共享 署名-相同方式共享 4.0协议发布            此页面修订于： 2019-05-13 08:08:49 "},"chapter_1/errors.html":{"url":"chapter_1/errors.html","title":"09. errors","keywords":"","body":"errors see built-in error types dir(__builtins__) change error to output try : num1 = int(input('1:')) num2 = int(input('2:')) print(num1/num2) except ZeroDivisionError : print('divided by 0 !') print the error try : num1 = int(input('1:')) num2 = int(input('2:')) print(num1/num2) except Exception as e : print(e) fuck all the error # 一了百了 try : num1 = int(input('1:')) num2 = int(input('2:')) print(num1/num2) except : print('stupid !') have a saying at last if operated successfully (else) try : num1 = int(input('1:')) num2 = int(input('2:')) print(num1/num2) except Exception as e : print(e) else : print('ahhhh，that's good, that is good') have a saying at last anyway (finally) try : num1 = int(input('1:')) num2 = int(input('2:')) print(num1/num2) except Exception as e : print(e) finally : #无论如何都会被执行 print('ahhhh，that's good, that is good') By heathcliff233，使用知识共享 署名-相同方式共享 4.0协议发布            此页面修订于： 2019-05-13 08:43:37 "},"user.html":{"url":"user.html","title":"user","keywords":"","body":" By heathcliff233，使用知识共享 署名-相同方式共享 4.0协议发布            此页面修订于： 2019-05-02 21:35:09 "}}